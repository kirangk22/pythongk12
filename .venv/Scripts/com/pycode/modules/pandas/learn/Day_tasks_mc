https://www.scaler.com/event/data-analysis-with-numpy--pandas--and-python-1a/meeting?utm_source=midfunnel&utm_medium=whatsapp&utm_campaign=DS320

import pandas as pd
df=pd.read_excel('/content/Sample - Superstore.xls')
df

df.head()
df.tail()

df.info()    # information about dataset
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 9994 entries, 0 to 9993
Data columns (total 21 columns):
 #   Column         Non-Null Count  Dtype
---  ------         --------------  -----
 0   Row ID         9994 non-null   int64
 1   Order ID       9994 non-null   object
 2   Order Date     9994 non-null   datetime64[ns]
 3   Ship Date      9994 non-null   datetime64[ns]
 4   Ship Mode      9994 non-null   object
 5   Customer ID    9994 non-null   object
 6   Customer Name  9994 non-null   object
 7   Segment        9994 non-null   object
 8   Country        9994 non-null   object
 9   City           9994 non-null   object
 10  State          9994 non-null   object
 11  Postal Code    9994 non-null   int64
 12  Region         9994 non-null   object
 13  Product ID     9994 non-null   object
 14  Category       9994 non-null   object
 15  Sub-Category   9994 non-null   object
 16  Product Name   9994 non-null   object
 17  Sales          9994 non-null   float64
 18  Quantity       9994 non-null   int64
 19  Discount       9994 non-null   float64
 20  Profit         9994 non-null   float64
dtypes: datetime64[ns](2), float64(3), int64(3), object(13)
memory usage: 1.6+ MB



df.describe()  # stats info of dataset cols
df[['Sales','Quantity','Discount','Profit']].describe()


# to see missing values
df.isna().sum()
df.isnull().sum()



# fill missing vals
df['col1']=df['col1'].fillna(0)
store back to same col after fill with defaults.


df.info()  # also shows non  null counts and total records

df['profit_margin']=df['Profit']/df['Sales']
df


df['Sales']=df['Sales'].fillna(df['Sales'].median())
df


import seaborn as sbn
sbn.countplot(data=df,x='Category')



sbn.scatterplot(x='Sales',y='Profit',hue='Category',data=df)
hue means colors based column Category.


import seaborn as sbn
#sbn.countplot(data=df,x='Category')
sbn.boxplot(x='Category',y='Quantity',data=df)





numpy for Maths:
====================
import numpy as np
a=np.array([1,2,3])
b=np.array([5,6,7])
np.dot(a,b)

1*5+2*6+3*7=?


Marix multiplication?

a=np.array([[1,2,3],[4,5,6]])  2 by 3
b=np.array([[5,6,7],[8,9,5]])  2 by 3...convert transpose to 3 by2 for multiplication
np.matmul(a,b.transpose())



x=np.array([1,2,3,4,5,6,7,8])
np.percentile(x,25)

x=np.array([1,2,3,4,5,6,7,8])
np.percentile(x,25)
np.min(x)
np.max(x)
#np.mean(x)
#np.median(x)
np.ptp(x) ---> max - min



df.groupby('Category')['Sales'].mean()

when ever u talk about columns use []
when u talk about function use ()


df.groupby('Category').agg(('Sales','mean'))  ---> err  why?
df.groupby('Category').agg(mn=('Sales','mean')) ---> correct

df.groupby('Category')['Sales'].sum()

df.groupby('Sub-Category')['Sales'].sum().sort_values(ascending=False)

df.groupby('Sub-Category')['Sales'].sum().sort_values(ascending=False).head(3)   ----> Top 3



import seaborn as sbn
#sbn.countplot(data=df,x='Category')
sbn.boxplot(x='Category',y='Quantity',data=df)




